import '../constants/app_assets.dart';

class MoodData {
  final DateTime date;
  final double moodScore;
  final String moodDescription;
  final String? note;
  final List<String> tags;

  MoodData({
    required this.date,
    required this.moodScore,
    required this.moodDescription,
    this.note,
    this.tags = const [],
  });

  MoodData copyWith({
    DateTime? date,
    double? moodScore,
    String? moodDescription,
    String? note,
    List<String>? tags,
  }) {
    return MoodData(
      date: date ?? this.date,
      moodScore: moodScore ?? this.moodScore,
      moodDescription: moodDescription ?? this.moodDescription,
      note: note ?? this.note,
      tags: tags ?? this.tags,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'date': date.toIso8601String(),
      'moodScore': moodScore,
      'moodDescription': moodDescription,
      'note': note,
      'tags': tags,
    };
  }

  factory MoodData.fromJson(Map<String, dynamic> json) {
    return MoodData(
      date: DateTime.parse(json['date']),
      moodScore: json['moodScore'].toDouble(),
      moodDescription: json['moodDescription'],
      note: json['note'],
      tags: List<String>.from(json['tags'] ?? []),
    );
  }

  String get weekday {
    const weekdays = ['Âë®‰∏Ä', 'Âë®‰∫å', 'Âë®‰∏â', 'Âë®Âõõ', 'Âë®‰∫î', 'Âë®ÂÖ≠', 'Âë®Êó•'];
    return weekdays[date.weekday - 1];
  }

  String get formattedDate {
    return '${date.month}-${date.day}';
  }

  String get moodLevel {
    if (moodScore >= 9.0) return 'Ë∂ÖÂºÄÂøÉ';
    if (moodScore >= 7.0) return 'ËàíÁïÖ';
    if (moodScore >= 4.0) return '‰∏ÄËà¨';
    if (moodScore >= 2.0) return '‰∏çÂºÄÂøÉ';
    return 'ÈöæËøá';
  }

  // Ê†πÊçÆÂøÉÊÉÖÂàÜÊï∞Ëé∑ÂèñÈ¢úËâ≤
  String get moodColor {
    if (moodScore >= 8.0) return '#10B981'; // ÁªøËâ≤
    if (moodScore >= 6.0) return '#60A5FA'; // ËìùËâ≤
    if (moodScore >= 4.0) return '#D7EBFF'; // ÊµÖËìùËâ≤
    if (moodScore >= 2.0) return '#F59E0B'; // Ê©ôËâ≤
    return '#EF4444'; // Á∫¢Ëâ≤
  }

  // Ëé∑ÂèñÂøÉÊÉÖÂõæÊ†á
  String get moodIcon {
    if (moodScore >= 8.0) return 'üòä';
    if (moodScore >= 6.0) return 'üôÇ';
    if (moodScore >= 4.0) return 'üòê';
    if (moodScore >= 2.0) return 'üòî';
    return 'üò¢';
  }

  // Âà§Êñ≠ÊòØÂê¶‰∏∫‰ªäÂ§©
  bool get isToday {
    final now = DateTime.now();
    return date.year == now.year && 
           date.month == now.month && 
           date.day == now.day;
  }

  // Âà§Êñ≠ÊòØÂê¶‰∏∫Êú¨Âë®
  bool get isThisWeek {
    final now = DateTime.now();
    final startOfWeek = now.subtract(Duration(days: now.weekday - 1));
    final endOfWeek = startOfWeek.add(Duration(days: 6));
    
    return date.isAfter(startOfWeek.subtract(Duration(days: 1))) &&
           date.isBefore(endOfWeek.add(Duration(days: 1)));
  }

  // ÂàõÂª∫ÈªòËÆ§ÂøÉÊÉÖÊï∞ÊçÆÁöÑÂ∑•ÂéÇÊñπÊ≥ï
  factory MoodData.defaultMood({
    required DateTime date,
    String description = 'Âπ≥Èùô',
  }) {
    return MoodData(
      date: date,
      moodScore: 5.0,
      moodDescription: description,
    );
  }

  // ÂàõÂª∫ÈöèÊú∫ÂøÉÊÉÖÊï∞ÊçÆÁöÑÂ∑•ÂéÇÊñπÊ≥ïÔºàÁî®‰∫éÊ®°ÊãüÊï∞ÊçÆÔºâ
  factory MoodData.random({
    required DateTime date,
  }) {
    final scores = [3.0, 4.5, 6.0, 7.5, 8.0, 5.5, 4.0];
    final descriptions = ['‰ΩéËêΩ', 'Âπ≥Èùô', 'ÊÑâÂø´', 'ÂºÄÂøÉ', 'ÂÖ¥Â•ã', 'ÊîæÊùæ', 'ÊÄùËÄÉ'];
    final index = date.weekday % scores.length;
    
    return MoodData(
      date: date,
      moodScore: scores[index],
      moodDescription: descriptions[index],
    );
  }

  // Ëé∑ÂèñÂøÉÊÉÖÂõæÁâáË∑ØÂæÑ
  String get moodImage {
    return AppAssets.getMoodImage(moodScore);
  }

  // Ëé∑ÂèñÂøÉÊÉÖÊ†áÁ≠æ
  String get moodLabel {
    if (moodScore >= 9.0) return 'Ë∂ÖÂºÄÂøÉ';
    if (moodScore >= 7.0) return 'ËàíÁïÖ';
    if (moodScore >= 4.0) return '‰∏ÄËà¨';
    if (moodScore >= 2.0) return '‰∏çÂºÄÂøÉ';
    return 'ÈöæËøá';
  }
} 